{
  "name": "drawer-menu",
  "type": "registry:ui",
  "dependencies": [
    "vaul"
  ],
  "files": [
    {
      "path": "ui/drawer-menu.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { Drawer as DrawerPrimitive } from \"vaul\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst DrawerContext = React.createContext<{\n  direction?: \"top\" | \"bottom\" | \"left\" | \"right\";\n}>({});\n\nconst DrawerRoot = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerContext.Provider value={{ direction: props.direction }}>\n    <DrawerPrimitive.Root\n      shouldScaleBackground={shouldScaleBackground}\n      {...props}\n    />\n  </DrawerContext.Provider>\n);\nDrawerRoot.displayName = \"Drawer\";\n\nconst DrawerTrigger = DrawerPrimitive.Trigger;\n\nconst DrawerPortal = DrawerPrimitive.Portal;\n\nconst DrawerClose = DrawerPrimitive.Close;\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n));\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => {\n  const { direction } = React.useContext(DrawerContext);\n\n  return (\n    <DrawerPortal>\n      <DrawerOverlay />\n      <DrawerPrimitive.Content\n        ref={ref}\n        className={cn(\n          \"fixed z-50 flex h-auto flex-col border border-border/40 bg-background\",\n          (!direction || direction === \"bottom\") &&\n            \"inset-x-0 bottom-0 mt-24 h-screen max-h-80 rounded-t-lg border-t\",\n          direction === \"top\" &&\n            \"inset-x-0 top-0 mb-24 h-screen max-h-80 rounded-b-lg border-b\",\n          direction === \"left\" &&\n            \"left-0 top-0 h-full w-screen max-w-80 rounded-e-lg border-e\",\n          direction === \"right\" &&\n            \"right-0 top-0 h-full w-screen max-w-80 rounded-s-lg border-s\",\n          className,\n        )}\n        {...props}\n      >\n        {direction === \"bottom\" && (\n          <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n        )}\n        {children}\n      </DrawerPrimitive.Content>\n    </DrawerPortal>\n  );\n});\nDrawerContent.displayName = \"DrawerContent\";\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n);\nDrawerHeader.displayName = \"DrawerHeader\";\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n);\nDrawerFooter.displayName = \"DrawerFooter\";\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className,\n    )}\n    {...props}\n  />\n));\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName;\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName;\n\nexport const DrawerMenu = {\n  Root: DrawerRoot,\n  Portal: DrawerPortal,\n  Overlay: DrawerOverlay,\n  Trigger: DrawerTrigger,\n  Close: DrawerClose,\n  Content: DrawerContent,\n  Header: DrawerHeader,\n  Footer: DrawerFooter,\n  Title: DrawerTitle,\n  Description: DrawerDescription,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}