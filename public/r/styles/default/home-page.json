{
  "name": "home-page",
  "type": "registry:block",
  "registryDependencies": [
    "button",
    "navigation-menu",
    "scroll-area",
    "sonner",
    "toast",
    "https://raw.githubusercontent.com/MaskSysDev/adminsys-components/refs/heads/main/public/r/styles/default/typography.json",
    "https://raw.githubusercontent.com/MaskSysDev/adminsys-components/refs/heads/main/public/r/styles/default/drawer-menu.json"
  ],
  "files": [
    {
      "path": "block/home-page/layout.tsx",
      "content": "import type { Metadata, Viewport } from \"next\";\nimport localFont from \"next/font/local\";\n\nimport { siteConfig } from \"@/config/site\";\nimport { cn } from \"@/lib/utils\";\n\nimport { SiteFooter } from \"@/components/layout/footer/site-footer\";\nimport { SiteHeader } from \"@/components/layout/header/site-header\";\n\nimport { ThemeProvider } from \"@/components/provider/theme-provider\";\n\nimport { TailwindIndicator } from \"@/components/tailwind-indicator\";\nimport { Toaster as ToasterSonner } from \"@/components/ui/sonner\";\nimport { Toaster } from \"@/components/ui/toaster\";\n\nimport \"@/styles/globals.css\";\n\nconst geistSans = localFont({\n  src: \"../../fonts/GeistVF.woff\",\n  variable: \"--font-geist-sans\",\n  weight: \"100 900\",\n});\nconst geistMono = localFont({\n  src: \"../../fonts/GeistMonoVF.woff\",\n  variable: \"--font-geist-mono\",\n  weight: \"100 900\",\n});\n\nexport const metadata: Metadata = {\n  metadataBase: new URL(siteConfig.url),\n  title: {\n    default: siteConfig.name,\n    template: `%s - ${siteConfig.name}`,\n  },\n  description: siteConfig.description,\n\n  robots: {\n    follow: false,\n    index: false,\n    nocache: false,\n    googleBot: {\n      index: false,\n      follow: false,\n      noimageindex: false,\n    },\n  },\n  formatDetection: {\n    email: false,\n    address: false,\n    telephone: false,\n  },\n  referrer: \"origin-when-cross-origin\",\n\n  icons: {\n    icon: siteConfig.favicon,\n    shortcut: siteConfig.favicon16x16,\n    apple: siteConfig.favicon180x180,\n  },\n\n  openGraph: {\n    type: \"website\",\n    title: siteConfig.name,\n    locale: siteConfig.locale,\n    description: siteConfig.description,\n    url: siteConfig.url,\n    siteName: siteConfig.name,\n    images: [\n      {\n        url: siteConfig.favicon180x180,\n        width: 180,\n        height: 180,\n      },\n      {\n        url: siteConfig.favicon192x192,\n        width: 192,\n        height: 192,\n      },\n      {\n        url: siteConfig.favicon512x512,\n        width: 512,\n        height: 512,\n      },\n    ],\n  },\n\n  twitter: {\n    card: \"summary_large_image\",\n    title: siteConfig.name,\n    description: siteConfig.description,\n    images: [siteConfig.favicon512x512],\n    creator: siteConfig.creator,\n  },\n\n  authors: [{ name: siteConfig.author, url: siteConfig.authorUrl }],\n\n  creator: siteConfig.creator,\n  publisher: siteConfig.publisher,\n};\n\nexport const viewport: Viewport = {\n  themeColor: [\n    { media: \"(prefers-color-scheme: light)\", color: \"white\" },\n    { media: \"(prefers-color-scheme: dark)\", color: \"black\" },\n  ],\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={cn(\n          \"min-h-screen bg-background antialiased\",\n          geistSans.variable,\n          geistMono.variable,\n        )}\n      >\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          <div className=\"flex min-h-screen min-w-full flex-col\">\n            <SiteHeader siteHeader={siteConfig.siteHeader} />\n            <div className=\"flex flex-1\">\n              <main className=\"flex flex-1 flex-col\">{children}</main>\n            </div>\n            <SiteFooter footer={siteConfig.footerSimple} />\n          </div>\n          <TailwindIndicator />\n          <ToasterSonner />\n          <Toaster />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(web)/layout.tsx"
    },
    {
      "path": "block/home-page/page.tsx",
      "content": "import { Typography } from \"@/components/ui/typography\";\n\nexport default function HomePage() {\n  return (\n    <div className=\"flex flex-1 flex-col\">\n      <section className=\"container p-2\">\n        <Typography.H1 className=\"text-2xl font-semibold lg:text-3xl\">\n          Home\n        </Typography.H1>\n      </section>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(web)/page.tsx"
    },
    {
      "path": "block/home-page/components/theme-provider.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\nimport type { ThemeProviderProps } from \"next-themes/dist/types\";\n\nexport function ThemeProvider({\n  children,\n  ...props\n}: Readonly<ThemeProviderProps>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n",
      "type": "registry:component",
      "target": "components/provider/theme-provider.tsx"
    },
    {
      "path": "block/home-page/components/toggle-theme.tsx",
      "content": "\"use client\";\nimport { useTheme } from \"next-themes\";\n\nimport { Moon, Sun } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { Button } from \"@/components/ui/button\";\n\ntype ToggleThemeProps = {\n  className?: string;\n};\n\nexport function ToggleTheme({ className }: ToggleThemeProps) {\n  const { setTheme, theme } = useTheme();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n      type=\"button\"\n      className={cn(\"size-9 text-muted-foreground\", className)}\n    >\n      <Sun className=\"h-6 w-[1.3rem] dark:hidden\" />\n      <Moon className=\"hidden size-5 dark:block\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/layout/toggle/toggle-theme.tsx"
    },
    {
      "path": "block/home-page/components/site-header.tsx",
      "content": "import Link from \"next/link\";\n\nimport { NavMain } from \"@/components/layout/navbar/inc/nav-main\";\nimport { NavMobile } from \"@/components/layout/navbar/nav-mobile\";\nimport { ToggleTheme } from \"@/components/layout/toggle/toggle-theme\";\n\nimport { Button } from \"@/components/ui/button\";\n\ntype SiteHeaderProps = {\n  siteHeader: {\n    name: string;\n    links: {\n      id: string;\n      label: string;\n      href: string;\n      disabled: boolean;\n    }[];\n  };\n};\n\nexport const SiteHeader = ({ siteHeader }: SiteHeaderProps) => {\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/95\">\n      <div className=\"mx-auto flex h-14 items-center justify-center px-2\">\n        <div className=\"container relative flex w-full items-center justify-between\">\n          {/* Left */}\n          <div className=\"flex items-center space-x-2\">\n            <h1 className=\"text-3xl font-bold\">{siteHeader.name}</h1>\n            <NavMain navbar={siteHeader} className=\"hidden md:flex\" />\n          </div>\n\n          {/* Right */}\n          <div className=\"flex flex-1 items-center justify-end space-x-2\">\n            <Button asChild size=\"sm\">\n              <Link href=\"/auth/sign-in\">Sign-in</Link>\n            </Button>\n            <ToggleTheme className=\"hidden md:flex\" />\n            <NavMobile className=\"flex md:hidden\" />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/header/site-header.tsx"
    },
    {
      "path": "block/home-page/components/nav-main.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport {\n  NavigationMenu,\n  NavigationMenuItem,\n  NavigationMenuList,\n} from \"@/components/ui/navigation-menu\";\n\nimport { NavLink } from \"./nav-link\";\n\ninterface NavMainProps {\n  className?: string;\n  navbar: {\n    name: string;\n    links: {\n      id: string;\n      label: string;\n      href: string;\n    }[];\n  };\n}\n\nexport const NavMain = ({ className, navbar }: NavMainProps) => {\n  return (\n    <NavigationMenu>\n      <NavigationMenuList className={cn(\"flex items-center\", className)}>\n        {navbar.links.map((item) => (\n          <NavigationMenuItem\n            className=\"flex items-center text-lg font-medium text-muted-foreground md:block\"\n            key={item.id}\n          >\n            <NavLink href={item.href}>{item.label}</NavLink>\n          </NavigationMenuItem>\n        ))}\n      </NavigationMenuList>\n    </NavigationMenu>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/navbar/inc/nav-main.tsx"
    },
    {
      "path": "block/home-page/components/nav-link.tsx",
      "content": "\"use client\";\n\nimport type { ReactNode } from \"react\";\nimport React from \"react\";\n\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { Button } from \"@/components/ui/button\";\n\ninterface NavLinkProps {\n  href: string;\n  children: ReactNode;\n}\nexport const NavLink = ({\n  href,\n  children,\n}: NavLinkProps): React.JSX.Element => {\n  const pathname = usePathname();\n\n  return (\n    <Button\n      asChild\n      variant=\"ghost\"\n      size=\"sm\"\n      className=\"text-lg hover:bg-transparent\"\n    >\n      <Link\n        className={cn(pathname === href ? \"text-primary\" : null)}\n        href={href}\n      >\n        {children}\n      </Link>\n    </Button>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/navbar/inc/nav-link.tsx"
    },
    {
      "path": "block/home-page/components/nav-mobile.tsx",
      "content": "\"use client\";\n\nimport { MenuIcon, X } from \"lucide-react\";\n\nimport { siteConfig } from \"@/config/site\";\nimport { cn } from \"@/lib/utils\";\n\nimport { NavMain } from \"@/components/layout/navbar/inc/nav-main\";\nimport { ToggleTheme } from \"@/components/layout/toggle/toggle-theme\";\n\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { DrawerMenu } from \"@/components/ui/drawer/drawer-menu\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\ntype NavMobileProps = {\n  className?: string;\n};\nexport const NavMobile = ({ className }: NavMobileProps) => {\n  return (\n    <DrawerMenu.Root direction={\"right\"}>\n      <DrawerMenu.Trigger\n        className={cn(\n          buttonVariants({\n            variant: \"ghost\",\n            size: \"icon\",\n          }),\n          \"text-muted-foreground\",\n          className,\n        )}\n      >\n        <MenuIcon />\n        <span className=\"sr-only\">Menu</span>\n      </DrawerMenu.Trigger>\n      <DrawerMenu.Content className=\"ring-offset-background  focus-visible:outline-none\">\n        <DrawerMenu.Header className=\"flex h-16 items-start border-b\">\n          <DrawerMenu.Title className=\"flex w-full justify-between gap-2\">\n            <h1 className=\"text-3xl font-bold\">{siteConfig.siteHeader.name}</h1>\n            <ToggleTheme className=\"me-6\" />\n          </DrawerMenu.Title>\n          <DrawerMenu.Close\n            className={cn(\n              buttonVariants({\n                variant: \"ghost\",\n                size: \"icon\",\n              }),\n              \"absolute right-4 top-4 size-6 text-muted-foreground\",\n            )}\n          >\n            <X className=\"size-4\" />\n            <span className=\"sr-only\">Close</span>\n          </DrawerMenu.Close>\n        </DrawerMenu.Header>\n        <DrawerMenu.Description />\n        <ScrollArea className=\"overflow-auto break-all p-4\">\n          <NavMain\n            className=\"flex size-full flex-col items-start space-x-0 space-y-1 p-1\"\n            navbar={siteConfig.siteHeader}\n          />\n        </ScrollArea>\n      </DrawerMenu.Content>\n    </DrawerMenu.Root>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/navbar/nav-mobile.tsx"
    },
    {
      "path": "block/home-page/components/site.ts",
      "content": "export type SiteConfig = typeof siteConfig;\n\nconst name = \"AdminSys\";\nconst emailContact = \"contact@email.com\";\nconst emailSupport = \"support@email.com\";\n\nconst url = \"https://adminsys-boilerplate.vercel.app\";\nconst favicon = \"/favicon.ico\";\nconst favicon16x16 = \"/assets/images/icon/icon-16x16.png\";\nconst favicon180x180 = \"/assets/images/icon/icon-180x180.png\";\nconst favicon192x192 = \"/assets/images/icon/icon-192x192.png\";\nconst favicon512x512 = \"/assets/images/icon/icon-512x512.png\";\nconst logo = \"/assets/images/logo/logo-dark.png\";\nconst logoLight = \"/assets/images/logo/logo-light.png\";\nconst logoDark = \"/assets/images/logo/logo-dark.png\";\n\nconst locale = \"en-US\";\n\nconst facebook = \"https://www.facebook.com/\";\nconst instagram = \"https://www.instagram.com/\";\nconst youtube = \"https://www.youtube.com/\";\n\nconst keywords = \"React, Next.js, TypeScript\";\n\nconst author = \"MaskSysDev\";\nconst authorUrl = \"https://github.com/MaskSysDev\";\n\nconst creator = \"Mask\";\nconst publisher = \"MaskSysDev\";\n\nconst projectUrl = \"https://github.com/MaskSysDev/adminsys-boilerplate\";\n\nexport const siteConfig = {\n  /* Global */\n  name,\n  description,\n  emailContact,\n  emailSupport,\n  url,\n\n  favicon,\n  favicon16x16,\n  favicon180x180,\n  favicon192x192,\n  favicon512x512,\n  logo,\n  logoLight,\n  logoDark,\n\n  locale,\n\n  keywords,\n\n  author,\n  authorUrl,\n\n  creator,\n  publisher,\n\n  project: {\n    url: projectUrl,\n    author,\n    authorUrl,\n  },\n  docsRepositoryBase: projectUrl,\n\n  links: {\n    github: projectUrl,\n    facebook,\n    instagram,\n    youtube,\n  },\n\n  /* Components Layout */\n  siteHeader: {\n    name,\n    links: [\n      {\n        id: \"1\",\n        label: \"Home\",\n        href: \"/\",\n        disabled: false,\n      },\n      {\n        id: \"2\",\n        label: \"About\",\n        href: \"/about\",\n        disabled: false,\n      },\n      {\n        id: \"3\",\n        label: \"Docs\",\n        href: \"/docs\",\n        disabled: false,\n      },\n      {\n        id: \"4\",\n        label: \"Admin\",\n        href: \"/admin/dashboard\",\n        disabled: false,\n      },\n      {\n        id: \"5\",\n        label: \"Contact\",\n        href: \"/contact\",\n        disabled: false,\n      },\n    ],\n  },\n\n  footerSimple: {\n    author,\n    authorUrl,\n    name,\n    facebook,\n    instagram,\n    youtube,\n  },\n};\n",
      "type": "registry:block",
      "target": "config/site.ts"
    }
  ]
}