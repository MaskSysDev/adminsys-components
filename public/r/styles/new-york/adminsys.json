{
  "name": "adminsys",
  "type": "registry:block",
  "registryDependencies": [
    "avatar",
    "button",
    "dropdown-menu",
    "navigation-menu",
    "scroll-area",
    "sonner",
    "toast",
    "https://raw.githubusercontent.com/MaskSysDev/adminsys-components/refs/heads/main/public/r/styles/default/typography.json",
    "https://raw.githubusercontent.com/MaskSysDev/adminsys-components/refs/heads/main/public/r/styles/default/drawer-menu.json",
    "https://raw.githubusercontent.com/MaskSysDev/adminsys-components/refs/heads/main/public/r/styles/default/theme-adminsys.json",
    "https://raw.githubusercontent.com/MaskSysDev/adminsys-components/refs/heads/main/public/r/styles/default/next-themes.json",
    "https://raw.githubusercontent.com/MaskSysDev/adminsys-components/refs/heads/main/public/r/styles/default/sidebar.json",
    "https://raw.githubusercontent.com/MaskSysDev/adminsys-components/refs/heads/main/public/r/styles/default/use-mobile.json"
  ],
  "files": [
    {
      "path": "block/adminsys/web/layout.tsx",
      "content": "import type { Metadata, Viewport } from \"next\";\nimport localFont from \"next/font/local\";\n\nimport { siteConfig } from \"@/config/site\";\nimport { cn } from \"@/lib/utils\";\n\nimport { SiteFooter } from \"@/components/layout/footer/site-footer\";\nimport { SiteHeader } from \"@/components/layout/header/site-header\";\n\nimport { ThemeProvider } from \"@/components/provider/theme-provider\";\n\nimport { Toaster as ToasterSonner } from \"@/components/ui/sonner\";\nimport { Toaster } from \"@/components/ui/toaster\";\n\nimport \"@/styles/globals.css\";\n\nconst geistSans = localFont({\n  src: \"../../fonts/GeistVF.woff\",\n  variable: \"--font-geist-sans\",\n  weight: \"100 900\",\n});\nconst geistMono = localFont({\n  src: \"../../fonts/GeistMonoVF.woff\",\n  variable: \"--font-geist-mono\",\n  weight: \"100 900\",\n});\n\nexport const metadata: Metadata = {\n  metadataBase: new URL(siteConfig.url),\n  title: {\n    default: siteConfig.name,\n    template: `%s - ${siteConfig.name}`,\n  },\n  description: siteConfig.siteDescription,\n\n  robots: {\n    follow: false,\n    index: false,\n    nocache: false,\n    googleBot: {\n      index: false,\n      follow: false,\n      noimageindex: false,\n    },\n  },\n  formatDetection: {\n    email: false,\n    address: false,\n    telephone: false,\n  },\n  referrer: \"origin-when-cross-origin\",\n\n  icons: {\n    icon: siteConfig.favicon,\n    shortcut: siteConfig.favicon16x16,\n    apple: siteConfig.favicon180x180,\n  },\n\n  openGraph: {\n    type: \"website\",\n    title: siteConfig.name,\n    locale: siteConfig.locale,\n    description: siteConfig.siteDescription,\n    url: siteConfig.url,\n    siteName: siteConfig.name,\n    images: [\n      {\n        url: siteConfig.favicon180x180,\n        width: 180,\n        height: 180,\n      },\n      {\n        url: siteConfig.favicon192x192,\n        width: 192,\n        height: 192,\n      },\n      {\n        url: siteConfig.favicon512x512,\n        width: 512,\n        height: 512,\n      },\n    ],\n  },\n\n  twitter: {\n    card: \"summary_large_image\",\n    title: siteConfig.name,\n    description: siteConfig.siteDescription,\n    images: [siteConfig.favicon512x512],\n    creator: siteConfig.creator,\n  },\n\n  authors: [{ name: siteConfig.author, url: siteConfig.authorUrl }],\n\n  creator: siteConfig.creator,\n  publisher: siteConfig.publisher,\n};\n\nexport const viewport: Viewport = {\n  themeColor: [\n    { media: \"(prefers-color-scheme: light)\", color: \"white\" },\n    { media: \"(prefers-color-scheme: dark)\", color: \"black\" },\n  ],\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={cn(\n          \"min-h-screen bg-background antialiased\",\n          geistSans.variable,\n          geistMono.variable,\n        )}\n      >\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          <div className=\"flex min-h-screen min-w-full flex-col\">\n            <SiteHeader siteHeader={siteConfig.siteHeader} />\n            <div className=\"flex flex-1\">\n              <main className=\"flex flex-1 flex-col\">{children}</main>\n            </div>\n            <SiteFooter footer={siteConfig.footerSimple} />\n          </div>\n          <ToasterSonner />\n          <Toaster />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(web)/layout.tsx"
    },
    {
      "path": "block/adminsys/web/loading.tsx",
      "content": "import { LoadingSpinner } from \"@/components/layout/loading/loading-spinner\";\n\nexport default function Loading() {\n  return (\n    <section className=\"flex flex-col items-center gap-64 py-72\">\n      <div className=\"container flex h-full flex-col items-center justify-center space-y-2\">\n        <LoadingSpinner />\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(web)/loading.tsx"
    },
    {
      "path": "block/adminsys/components/loading-spinner.tsx",
      "content": "import { cn } from \"@/lib/utils\";\n\ntype LoadingSpinnerProps = {\n  className?: string;\n};\n\nexport const LoadingSpinner = ({ className }: LoadingSpinnerProps) => {\n  return (\n    <span\n      aria-label=\"loading\"\n      className={cn(\n        \"absolute inline-block size-6 min-w-max animate-spin rounded-full border-[3px] border-current border-t-transparent text-muted-foreground\",\n        className,\n      )}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </span>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/loading/loading-spinner.tsx"
    },
    {
      "path": "block/adminsys/web/page.tsx",
      "content": "import { Typography } from \"@/components/ui/typography\";\n\nexport default function HomePage() {\n  return (\n    <div className=\"flex flex-1 flex-col\">\n      <section className=\"container p-2\">\n        <Typography.H1 className=\"text-2xl font-semibold lg:text-3xl\">\n          Home\n        </Typography.H1>\n      </section>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(web)/page.tsx"
    },
    {
      "path": "block/adminsys/web/about/page.tsx",
      "content": "import { Metadata } from \"next\";\n\nimport { Typography } from \"@/components/ui/typography\";\n\nexport const metadata: Metadata = {\n  title: \"About\",\n  description: \"Description About.\",\n};\n\nexport default function AboutPage() {\n  return (\n    <div className=\"flex flex-1 justify-center\">\n      <section className=\"container p-2\">\n        <Typography.H1 className=\"text-2xl font-semibold lg:text-3xl\">\n          About\n        </Typography.H1>\n      </section>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(web)/about/page.tsx"
    },
    {
      "path": "block/adminsys/web/contact/page.tsx",
      "content": "import { Metadata } from \"next\";\n\nimport { Typography } from \"@/components/ui/typography\";\n\nexport const metadata: Metadata = {\n  title: \"Contact\",\n  description: \"Description Contact.\",\n};\n\nexport default function ContactPage() {\n  return (\n    <div className=\"flex flex-1 justify-center\">\n      <section className=\"container p-2\">\n        <Typography.H1 className=\"text-2xl font-semibold lg:text-3xl\">\n          Contact\n        </Typography.H1>\n      </section>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(web)/contact/page.tsx"
    },
    {
      "path": "block/adminsys/web/not-found/page.tsx",
      "content": "import { Metadata } from \"next\";\n\nimport { NotFound } from \"@/components/layout/not-found/not-found\";\n\nexport const metadata: Metadata = {\n  title: \"NotFound\",\n  description: \"Description NotFound.\",\n};\n\nexport default function NotFoundPage() {\n  return (\n    <div className=\"container mx-auto py-8\">\n      <NotFound />\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(web)/[...not-found]/page.tsx"
    },
    {
      "path": "block/adminsys/components/not-found.tsx",
      "content": "import Link from \"next/link\";\n\nimport { Button } from \"@/components/ui/button\";\n\nexport const NotFound = () => {\n  return (\n    <section className=\"container flex flex-col items-center justify-center gap-4 py-6 md:min-h-[48vh] md:py-20\">\n      <div className=\"text-7xl font-bold text-primary\">404</div>\n\n      <div className=\"text-center text-2xl font-bold md:text-4xl lg:text-5xl xl:text-6xl\">\n        This page does not exist\n      </div>\n\n      <div className=\" text-sm font-medium text-muted-foreground md:text-xl lg:text-2xl\">\n        The page you are looking for could not be found.\n      </div>\n\n      <Button asChild variant=\"secondary\">\n        <Link href=\"/\">Go Home</Link>\n      </Button>\n    </section>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/not-found/not-found.tsx"
    },
    {
      "path": "block/adminsys/components/site-header.tsx",
      "content": "import { NavMain } from \"@/components/layout/navbar/inc/nav-main\";\nimport { NavMobile } from \"@/components/layout/navbar/nav-mobile\";\nimport { ToggleTheme } from \"@/components/layout/toggle/toggle-theme\";\n\ntype SiteHeaderProps = {\n  siteHeader: {\n    name: string;\n    links: {\n      id: string;\n      label: string;\n      href: string;\n      disabled: boolean;\n    }[];\n  };\n};\n\nexport const SiteHeader = ({ siteHeader }: SiteHeaderProps) => {\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/95\">\n      <div className=\"mx-auto flex h-14 items-center justify-center px-2\">\n        <div className=\"container relative flex w-full items-center justify-between\">\n          {/* Left */}\n          <div className=\"flex items-center space-x-2\">\n            <h1 className=\"text-3xl font-bold\">{siteHeader.name}</h1>\n            <NavMain navbar={siteHeader} className=\"hidden md:flex\" />\n          </div>\n\n          {/* Right */}\n          <div className=\"flex flex-1 items-center justify-end space-x-2\">\n            <ToggleTheme className=\"hidden md:flex\" />\n            <NavMobile className=\"flex md:hidden\" />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/header/site-header.tsx"
    },
    {
      "path": "block/adminsys/components/nav-main.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport {\n  NavigationMenu,\n  NavigationMenuItem,\n  NavigationMenuList,\n} from \"@/components/ui/navigation-menu\";\n\nimport { NavLink } from \"./nav-link\";\n\ninterface NavMainProps {\n  className?: string;\n  navbar: {\n    name: string;\n    links: {\n      id: string;\n      label: string;\n      href: string;\n    }[];\n  };\n}\n\nexport const NavMain = ({ className, navbar }: NavMainProps) => {\n  return (\n    <NavigationMenu>\n      <NavigationMenuList className={cn(\"flex items-center\", className)}>\n        {navbar.links.map((item) => (\n          <NavigationMenuItem\n            className=\"flex items-center text-lg font-medium text-muted-foreground md:block\"\n            key={item.id}\n          >\n            <NavLink href={item.href}>{item.label}</NavLink>\n          </NavigationMenuItem>\n        ))}\n      </NavigationMenuList>\n    </NavigationMenu>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/navbar/inc/nav-main.tsx"
    },
    {
      "path": "block/adminsys/components/nav-link.tsx",
      "content": "\"use client\";\n\nimport type { ReactNode } from \"react\";\nimport React from \"react\";\n\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { Button } from \"@/components/ui/button\";\n\ninterface NavLinkProps {\n  href: string;\n  children: ReactNode;\n}\nexport const NavLink = ({\n  href,\n  children,\n}: NavLinkProps): React.JSX.Element => {\n  const pathname = usePathname();\n\n  return (\n    <Button\n      asChild\n      variant=\"ghost\"\n      size=\"sm\"\n      className=\"text-lg hover:bg-transparent\"\n    >\n      <Link\n        className={cn(pathname === href ? \"text-primary\" : null)}\n        href={href}\n      >\n        {children}\n      </Link>\n    </Button>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/navbar/inc/nav-link.tsx"
    },
    {
      "path": "block/adminsys/components/nav-mobile.tsx",
      "content": "\"use client\";\n\nimport { MenuIcon, X } from \"lucide-react\";\n\nimport { siteConfig } from \"@/config/site\";\nimport { cn } from \"@/lib/utils\";\n\nimport { NavMain } from \"@/components/layout/navbar/inc/nav-main\";\nimport { ToggleTheme } from \"@/components/layout/toggle/toggle-theme\";\n\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { DrawerMenu } from \"@/components/ui/drawer-menu\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\ntype NavMobileProps = {\n  className?: string;\n};\nexport const NavMobile = ({ className }: NavMobileProps) => {\n  return (\n    <DrawerMenu.Root direction={\"right\"}>\n      <DrawerMenu.Trigger\n        className={cn(\n          buttonVariants({\n            variant: \"ghost\",\n            size: \"icon\",\n          }),\n          \"text-muted-foreground\",\n          className,\n        )}\n      >\n        <MenuIcon />\n        <span className=\"sr-only\">Menu</span>\n      </DrawerMenu.Trigger>\n      <DrawerMenu.Content className=\"ring-offset-background  focus-visible:outline-none\">\n        <DrawerMenu.Header className=\"flex h-16 items-start border-b\">\n          <DrawerMenu.Title className=\"flex w-full justify-between gap-2\">\n            <h1 className=\"text-3xl font-bold\">{siteConfig.siteHeader.name}</h1>\n            <ToggleTheme className=\"me-6\" />\n          </DrawerMenu.Title>\n          <DrawerMenu.Close\n            className={cn(\n              buttonVariants({\n                variant: \"ghost\",\n                size: \"icon\",\n              }),\n              \"absolute right-4 top-4 size-6 text-muted-foreground\",\n            )}\n          >\n            <X className=\"size-4\" />\n            <span className=\"sr-only\">Close</span>\n          </DrawerMenu.Close>\n        </DrawerMenu.Header>\n        <DrawerMenu.Description />\n        <ScrollArea className=\"overflow-auto break-all p-4\">\n          <NavMain\n            className=\"flex size-full flex-col items-start space-x-0 space-y-1 p-1\"\n            navbar={siteConfig.siteHeader}\n          />\n        </ScrollArea>\n      </DrawerMenu.Content>\n    </DrawerMenu.Root>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/navbar/nav-mobile.tsx"
    },
    {
      "path": "block/adminsys/components/site-footer.tsx",
      "content": "interface SiteFooterProps {\n  footer: {\n    author: string;\n    authorUrl: string;\n    name: string;\n    facebook: string;\n    instagram: string;\n    youtube: string;\n  };\n}\n\nexport const SiteFooter = ({ footer }: SiteFooterProps) => {\n  return (\n    <footer className=\"body-font static bottom-0 left-0 w-full border-t border-border/40 bg-background text-muted-foreground\">\n      <div className=\"container mx-auto flex flex-col flex-wrap items-center py-2 sm:flex-row\">\n        <p className=\"text-center text-sm sm:text-left\">\n          &copy;2024{\" \"}\n          <a\n            className=\"group inline-flex h-10 w-max items-center justify-center rounded-md py-2 text-sm font-semibold text-foreground transition ease-in-out hover:bg-transparent hover:text-accent-foreground focus:outline-none focus-visible:text-accent-foreground focus-visible:ring-0 focus-visible:ring-offset-0 disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n            href=\"/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <span className=\"font-semibold\">{footer.name}</span>\n          </a>{\" \"}\n          by{\" \"}\n          <a\n            className=\"group inline-flex h-10 w-max items-center justify-center rounded-md py-2 text-sm font-semibold text-muted-foreground transition ease-in-out hover:bg-transparent hover:text-accent-foreground focus:outline-none focus-visible:text-accent-foreground focus-visible:ring-0 focus-visible:ring-offset-0 disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n            href={footer.authorUrl}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <span className=\"font-semibold\">{footer.author}</span>\n          </a>\n        </p>\n        <span className=\"mt-2 inline-flex justify-center gap-4 sm:ml-auto sm:mt-0 sm:justify-start\">\n          <a\n            className=\"group inline-flex h-10 w-max items-center justify-center rounded-md py-2 text-sm font-semibold text-muted-foreground transition ease-in-out hover:bg-transparent hover:text-accent-foreground focus:outline-none focus-visible:text-accent-foreground focus-visible:ring-0 focus-visible:ring-offset-0 disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n            href={footer.facebook}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"lucide lucide-facebook\"\n            >\n              <path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\" />\n            </svg>\n          </a>\n          <a\n            className=\"group inline-flex h-10 w-max items-center justify-center rounded-md py-2 text-sm font-semibold text-muted-foreground transition ease-in-out hover:bg-transparent hover:text-accent-foreground focus:outline-none focus-visible:text-accent-foreground focus-visible:ring-0 focus-visible:ring-offset-0 disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n            href={footer.instagram}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"lucide lucide-instagram\"\n            >\n              <rect width=\"20\" height=\"20\" x=\"2\" y=\"2\" rx=\"5\" ry=\"5\" />\n              <path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\" />\n              <line x1=\"17.5\" x2=\"17.51\" y1=\"6.5\" y2=\"6.5\" />\n            </svg>\n          </a>\n          <a\n            className=\"group inline-flex h-10 w-max items-center justify-center rounded-md py-2 text-sm font-semibold text-muted-foreground transition ease-in-out hover:bg-transparent hover:text-accent-foreground focus:outline-none focus-visible:text-accent-foreground focus-visible:ring-0 focus-visible:ring-offset-0 disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n            href={footer.youtube}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"lucide lucide-youtube\"\n            >\n              <path d=\"M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17\" />\n              <path d=\"m10 15 5-3-5-3z\" />\n            </svg>\n          </a>\n        </span>\n      </div>\n    </footer>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/footer/site-footer.tsx"
    },
    {
      "path": "block/adminsys/components/site.ts",
      "content": "export type SiteConfig = typeof siteConfig;\n\nconst name = \"AdminSys\";\n\nconst siteDescription =\n  \"Nextjs App with Typescript, Tailwind CSS, Shadcn/ui, ESLint, Prettier, and more.\";\n\nconst emailContact = \"contact@email.com\";\nconst emailSupport = \"support@email.com\";\n\nconst url = \"https://adminsys-boilerplate.vercel.app\";\nconst favicon = \"/favicon.ico\";\nconst favicon16x16 = \"/assets/images/icon/icon-16x16.png\";\nconst favicon180x180 = \"/assets/images/icon/icon-180x180.png\";\nconst favicon192x192 = \"/assets/images/icon/icon-192x192.png\";\nconst favicon512x512 = \"/assets/images/icon/icon-512x512.png\";\nconst logo = \"/assets/images/logo/logo-dark.png\";\nconst logoLight = \"/assets/images/logo/logo-light.png\";\nconst logoDark = \"/assets/images/logo/logo-dark.png\";\n\nconst locale = \"en-US\";\n\nconst facebook = \"https://www.facebook.com/\";\nconst instagram = \"https://www.instagram.com/\";\nconst youtube = \"https://www.youtube.com/\";\n\nconst keywords = \"React, Next.js, TypeScript\";\n\nconst author = \"MaskSysDev\";\nconst authorUrl = \"https://github.com/MaskSysDev\";\n\nconst creator = \"Mask\";\nconst publisher = \"MaskSysDev\";\n\nconst projectUrl = \"https://github.com/MaskSysDev/adminsys-boilerplate\";\n\nexport const siteConfig = {\n  /* Global */\n  name,\n  siteDescription,\n  emailContact,\n  emailSupport,\n  url,\n\n  favicon,\n  favicon16x16,\n  favicon180x180,\n  favicon192x192,\n  favicon512x512,\n  logo,\n  logoLight,\n  logoDark,\n\n  locale,\n\n  keywords,\n\n  author,\n  authorUrl,\n\n  creator,\n  publisher,\n\n  project: {\n    url: projectUrl,\n    author,\n    authorUrl,\n  },\n  docsRepositoryBase: projectUrl,\n\n  links: {\n    github: projectUrl,\n    facebook,\n    instagram,\n    youtube,\n  },\n\n  /* Components Layout */\n  siteHeader: {\n    name,\n    links: [\n      {\n        id: \"1\",\n        label: \"Home\",\n        href: \"/\",\n        disabled: false,\n      },\n      {\n        id: \"2\",\n        label: \"About\",\n        href: \"/about\",\n        disabled: false,\n      },\n      {\n        id: \"3\",\n        label: \"Dashboard\",\n        href: \"/admin/dashboard\",\n        disabled: false,\n      },\n      {\n        id: \"4\",\n        label: \"Contact\",\n        href: \"/contact\",\n        disabled: false,\n      },\n    ],\n  },\n\n  adminSidebar: {\n    name,\n    content: [\n      {\n        id: \"1\",\n        contentTitle: \"Admin\",\n        linksSection: [\n          {\n            id: \"1\",\n            label: \"Dashboard\",\n            href: \"/admin/dashboard\",\n            path: \"\",\n            items: [],\n          },\n        ],\n      },\n      {\n        id: \"2\",\n        contentTitle: \"Management\",\n        linksSection: [\n          {\n            id: \"1\",\n            label: \"Users\",\n            href: \"\",\n            path: \"/admin/users\",\n            items: [\n              {\n                id: \"1\",\n                label: \"Users List\",\n                href: \"/admin/users/list\",\n                path: \"\",\n                items: [],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n    support: [\n      {\n        id: \"1\",\n        label: \"Docs\",\n        href: \"/docs\",\n        path: \"\",\n        items: [],\n      },\n      {\n        id: \"2\",\n        label: \"Support\",\n        href: \"/support\",\n        path: \"\",\n        items: [],\n      },\n    ],\n  },\n\n  footerSimple: {\n    author,\n    authorUrl,\n    name,\n    facebook,\n    instagram,\n    youtube,\n  },\n};\n",
      "type": "registry:block",
      "target": "config/site.ts"
    },
    {
      "path": "block/adminsys/admin/layout.tsx",
      "content": "import type { Metadata, Viewport } from \"next\";\nimport localFont from \"next/font/local\";\n\nimport { siteConfig } from \"@/config/site\";\nimport { cn } from \"@/lib/utils\";\n\nimport { AdminHeader } from \"@/components/layout/header/admin-header\";\nimport { AdminSidebar } from \"@/components/layout/sidebar/admin-sidebar\";\n\nimport { ThemeProvider } from \"@/components/provider/theme-provider\";\n\nimport { SidebarLayout } from \"@/components/ui/sidebar\";\nimport { Toaster as ToasterSonner } from \"@/components/ui/sonner\";\nimport { Toaster } from \"@/components/ui/toaster\";\n\nimport \"@/styles/globals.css\";\n\nconst geistSans = localFont({\n  src: \"../../../fonts/GeistVF.woff\",\n  variable: \"--font-geist-sans\",\n  weight: \"100 900\",\n});\nconst geistMono = localFont({\n  src: \"../../../fonts/GeistMonoVF.woff\",\n  variable: \"--font-geist-mono\",\n  weight: \"100 900\",\n});\n\nexport const metadata: Metadata = {\n  metadataBase: new URL(siteConfig.url),\n  title: {\n    default: siteConfig.name,\n    template: `%s - ${siteConfig.name}`,\n  },\n  description: siteConfig.siteDescription,\n\n  robots: {\n    follow: false,\n    index: false,\n    nocache: false,\n    googleBot: {\n      index: false,\n      follow: false,\n      noimageindex: false,\n    },\n  },\n  formatDetection: {\n    email: false,\n    address: false,\n    telephone: false,\n  },\n  referrer: \"origin-when-cross-origin\",\n\n  icons: {\n    icon: siteConfig.favicon,\n    shortcut: siteConfig.favicon16x16,\n    apple: siteConfig.favicon180x180,\n  },\n\n  openGraph: {\n    type: \"website\",\n    title: siteConfig.name,\n    locale: siteConfig.locale,\n    description: siteConfig.siteDescription,\n    url: siteConfig.url,\n    siteName: siteConfig.name,\n    images: [\n      {\n        url: siteConfig.favicon180x180,\n        width: 180,\n        height: 180,\n      },\n      {\n        url: siteConfig.favicon192x192,\n        width: 192,\n        height: 192,\n      },\n      {\n        url: siteConfig.favicon512x512,\n        width: 512,\n        height: 512,\n      },\n    ],\n  },\n\n  twitter: {\n    card: \"summary_large_image\",\n    title: siteConfig.name,\n    description: siteConfig.siteDescription,\n    images: [siteConfig.favicon512x512],\n    creator: siteConfig.creator,\n  },\n\n  authors: [{ name: siteConfig.author, url: siteConfig.authorUrl }],\n\n  creator: siteConfig.creator,\n  publisher: siteConfig.publisher,\n};\n\nexport const viewport: Viewport = {\n  themeColor: [\n    { media: \"(prefers-color-scheme: light)\", color: \"white\" },\n    { media: \"(prefers-color-scheme: dark)\", color: \"black\" },\n  ],\n};\n\nexport default async function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  const { cookies } = await import(\"next/headers\");\n\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={cn(\n          \"min-h-screen bg-background antialiased\",\n          geistSans.variable,\n          geistMono.variable,\n        )}\n      >\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          <SidebarLayout\n            defaultOpen={cookies().get(\"sidebar:state\")?.value === \"true\"}\n          >\n            <div className=\"flex min-h-screen min-w-full flex-col\">\n              <AdminHeader />\n              <div className=\"flex flex-1\">\n                <AdminSidebar />\n                <main className=\"flex flex-1 flex-col                transition-all duration-300 ease-in-out\">\n                  {children}\n                </main>\n              </div>\n            </div>\n          </SidebarLayout>\n          <ToasterSonner />\n          <Toaster />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(admin)/admin/layout.tsx"
    },
    {
      "path": "block/adminsys/admin/loading.tsx",
      "content": "import { LoadingSpinner } from \"@/components/layout/loading/loading-spinner\";\n\nexport default function Loading() {\n  return (\n    <section className=\"flex flex-col items-center gap-64 py-72\">\n      <div className=\"container flex h-full flex-col items-center justify-center space-y-2\">\n        <LoadingSpinner />\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(admin)/admin/loading.tsx"
    },
    {
      "path": "block/adminsys/admin/dashboard/page.tsx",
      "content": "import { Typography } from \"@/components/ui/typography\";\n\nexport default function DashboardPage() {\n  return (\n    <div className=\"flex flex-1 justify-center\">\n      <section className=\"container p-2\">\n        <Typography.H1 className=\"text-2xl font-semibold lg:text-3xl\">\n          Dashboard\n        </Typography.H1>\n      </section>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(admin)/admin/dashboard/page.tsx"
    },
    {
      "path": "block/adminsys/admin/users/list/page.tsx",
      "content": "import { Typography } from \"@/components/ui/typography\";\n\nexport default function UsersListPage() {\n  return (\n    <div className=\"flex flex-1 justify-center\">\n      <section className=\"container p-2\">\n        <Typography.H1 className=\"text-2xl font-semibold lg:text-3xl\">\n          UsersList\n        </Typography.H1>\n      </section>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(admin)/admin/users/list/page.tsx"
    },
    {
      "path": "block/adminsys/admin/not-found/page.tsx",
      "content": "import { Metadata } from \"next\";\n\nimport { NotFound } from \"@/components/layout/not-found/not-found\";\n\nexport const metadata: Metadata = {\n  title: \"NotFound\",\n  description: \"Description NotFound.\",\n};\n\nexport default function NotFoundPage() {\n  return (\n    <div className=\"container mx-auto py-8\">\n      <NotFound />\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/(admin)/admin/[...not-found]/page.tsx"
    },
    {
      "path": "block/adminsys/components/admin-header.tsx",
      "content": "import { ToggleTheme } from \"@/components/layout/toggle/toggle-theme\";\n\nimport { DropdownUser } from \"@/components/auth/dropdown/dropdown-user\";\nimport { SidebarTrigger } from \"@/components/ui/sidebar\";\n\nexport const AdminHeader = () => {\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/95\">\n      <div className=\"mx-auto flex h-14 items-center justify-center px-2\">\n        <div className=\"container relative flex w-full items-center justify-between\">\n          {/* Left */}\n          <div className=\"flex items-center space-x-2\">\n            <SidebarTrigger />\n          </div>\n\n          {/* Right */}\n          <div className=\"flex flex-1 items-center justify-end space-x-2\">\n            <ToggleTheme />\n            <DropdownUser />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/header/admin-header.tsx"
    },
    {
      "path": "block/adminsys/components/dropdown-user.tsx",
      "content": "import Link from \"next/link\";\n\nimport { LogOut, User } from \"lucide-react\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nexport const DropdownUser = () => {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\">\n          <Avatar className=\"size-9\">\n            <AvatarImage\n              src=\"/assets/images/avatar/avatar.jpg\"\n              alt=\"Avatar Image\"\n            />\n            <AvatarFallback>\n              <User className=\"size-6\" />\n            </AvatarFallback>\n          </Avatar>\n          <span className=\"sr-only\">User Menu</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-48\">\n        <DropdownMenuLabel className=\"p-0 font-normal\">\n          <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm transition-all\">\n            <Avatar className=\"size-7 rounded-md\">\n              <AvatarImage\n                src=\"/assets/images/avatar/avatar.jpg\"\n                alt=\"Avatar User\"\n              />\n              <AvatarFallback>\n                <User className=\"size-6\" />\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"grid flex-1\">\n              <div className=\"font-medium\">User 01</div>\n              <div className=\"overflow-hidden text-xs text-muted-foreground\">\n                <div className=\"line-clamp-1\">user01@email.com</div>\n              </div>\n            </div>\n          </div>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem asChild>\n          <Link href=\"/auth/account\">Account</Link>\n        </DropdownMenuItem>\n        <DropdownMenuItem asChild>\n          <Link href=\"/admin/dashboard\">Admin Dashboard</Link>\n        </DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem className=\"gap-2\">\n          <LogOut className=\"size-4 text-muted-foreground\" />\n          Logout\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/dropdown/dropdown-user.tsx"
    },
    {
      "path": "block/adminsys/components/link-folder-root.tsx",
      "content": "import React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport const LinkFolderRoot = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, children, ...props }, ref) => (\n  <div ref={ref} className={cn(\"\", className)} {...props}>\n    {children}\n  </div>\n));\nLinkFolderRoot.displayName = \"LinkFolderRoot\";\n\nexport const LinkFolder = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, children, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"group relative flex justify-between\", className)}\n    {...props}\n  >\n    {children}\n  </div>\n));\nLinkFolder.displayName = \"LinkFolder\";\n",
      "type": "registry:component",
      "target": "components/layout/sidebar/inc/link-folder-root.tsx"
    },
    {
      "path": "block/adminsys/components/sidebar-links-section.tsx",
      "content": "import { SidebarLinkFolder } from \"@/components/layout/sidebar/inc/sidebar-link-folder\";\nimport { SidebarLinkSingle } from \"@/components/layout/sidebar/inc/sidebar-link-single\";\n\ntype SidebarLinksSectionProps = {\n  linksSection: {\n    id: string;\n    label: string;\n    href: string;\n    path: string;\n    items: {\n      id: string;\n      label: string;\n      href: string;\n      path: string;\n      items: never[];\n    }[];\n  }[];\n};\n\nexport const SidebarLinksSection = ({\n  linksSection,\n}: SidebarLinksSectionProps) => {\n  return (\n    <ul className=\"flex max-h-screen flex-col\">\n      {linksSection.map((item) => (\n        <li key={item.id} className=\"relative\">\n          {item.href && (\n            <SidebarLinkSingle label={item.label} href={item.href} />\n          )}\n          {item.path && (\n            <SidebarLinkFolder\n              label={item.label}\n              path={item.path}\n              items={item.items}\n            />\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/sidebar/inc/sidebar-links-section.tsx"
    },
    {
      "path": "block/adminsys/components/sidebar-link-folder.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\n\nimport { usePathname } from \"next/navigation\";\n\nimport { ChevronLeft } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport {\n  LinkFolder,\n  LinkFolderRoot,\n} from \"@/components/layout/sidebar/inc/link-folder-root\";\nimport { SidebarLinkSubmenu } from \"@/components/layout/sidebar/inc/sidebar-link-submenu\";\n\ntype SidebarLinkFolderProps = {\n  id?: string;\n  label: string;\n  path: string;\n  className?: string;\n  items: {\n    id: string;\n    label: string;\n    href: string;\n    path: string;\n    items: never[];\n  }[];\n};\n\nexport const SidebarLinkFolder = ({\n  id,\n  label,\n  path,\n  items,\n  className,\n}: SidebarLinkFolderProps) => {\n  const pathname = usePathname();\n  const isActive = pathname.includes(path);\n  const [showSubmenu, setShowSubmenu] = useState(isActive);\n\n  const toggleSidebar = () => {\n    setShowSubmenu(!showSubmenu);\n  };\n\n  return (\n    <LinkFolderRoot>\n      <LinkFolder onClick={toggleSidebar}>\n        <div className=\"group flex w-full items-center\">\n          <div\n            className={cn(\n              \"inline-block w-full cursor-pointer rounded-md px-4 py-2 font-semibold text-muted-foreground transition-colors duration-300 focus:outline-none group-hover:bg-primary/5 group-hover:text-foreground group-focus:text-foreground\",\n              className,\n              {\n                \"bg-primary/5  text-primary\": isActive,\n                \"rounded-b-none bg-primary/5 \": showSubmenu,\n              },\n            )}\n          >\n            {label}\n          </div>\n        </div>\n\n        <span\n          className={`pointer-events-none absolute right-0 flex items-center p-2.5 text-muted-foreground duration-200 group-hover:text-foreground ${\n            showSubmenu && \"-rotate-90\"\n          } transition-all`}\n        >\n          <ChevronLeft className=\"size-5\" />\n        </span>\n      </LinkFolder>\n\n      <div\n        className={`overflow-y-hidden rounded-b-md bg-primary/5  transition-all ${\n          showSubmenu ? \"h-full\" : \"h-0\"\n        } `}\n      >\n        <ul id={id} className=\"flex flex-col\">\n          {items.map((link) => (\n            <li key={link.id} className=\"group\">\n              <SidebarLinkSubmenu {...link} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </LinkFolderRoot>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/sidebar/inc/sidebar-link-folder.tsx"
    },
    {
      "path": "block/adminsys/components/sidebar-link-single.tsx",
      "content": "\"use client\";\n\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype SidebarLinkSingleProps = {\n  id?: string;\n  label: string;\n  href: string;\n  className?: string;\n};\n\nexport const SidebarLinkSingle = ({\n  id,\n  label,\n  href,\n  className,\n}: SidebarLinkSingleProps) => {\n  const pathname = usePathname();\n  const isActive = pathname === href;\n\n  return (\n    <Link\n      id={id}\n      href={href}\n      className={cn(\n        \"group inline-block h-10 w-full items-center justify-center rounded px-4 py-2 text-base font-semibold text-muted-foreground ring-offset-background transition-colors duration-300 ease-in-out hover:bg-primary/5 hover:text-foreground focus:text-foreground focus:outline-none focus-visible:text-foreground focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-primary/5 data-[state=open]:bg-primary/5\",\n        isActive && \"bg-primary/5 text-primary\",\n        className,\n      )}\n    >\n      {label}\n    </Link>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/sidebar/inc/sidebar-link-single.tsx"
    },
    {
      "path": "block/adminsys/components/sidebar-link-submenu.tsx",
      "content": "import Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype SidebarLinkSubmenuProps = {\n  id?: string;\n  label: string;\n  href: string;\n  className?: string;\n};\n\nexport const SidebarLinkSubmenu = ({\n  id,\n  label,\n  href,\n  className,\n}: SidebarLinkSubmenuProps) => {\n  const pathname = usePathname();\n  const isActive = pathname === href;\n\n  return (\n    <Link\n      id={id}\n      href={href}\n      className={cn(\n        \"group inline-block h-10 w-full items-center justify-center rounded px-4 py-2 ps-8 text-base font-semibold text-muted-foreground ring-offset-background transition-colors duration-300 ease-in-out hover:bg-transparent hover:text-foreground focus:text-foreground focus:outline-none focus-visible:text-foreground focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-primary/5 data-[state=open]:bg-primary/5\",\n        isActive && \"text-primary\",\n        className,\n      )}\n    >\n      {label}\n    </Link>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/sidebar/inc/sidebar-link-submenu.tsx"
    },
    {
      "path": "block/adminsys/components/sidebar-links-section.tsx",
      "content": "import { SidebarLinkFolder } from \"@/components/layout/sidebar/inc/sidebar-link-folder\";\nimport { SidebarLinkSingle } from \"@/components/layout/sidebar/inc/sidebar-link-single\";\n\ntype SidebarLinksSectionProps = {\n  linksSection: {\n    id: string;\n    label: string;\n    href: string;\n    path: string;\n    items: {\n      id: string;\n      label: string;\n      href: string;\n      path: string;\n      items: never[];\n    }[];\n  }[];\n};\n\nexport const SidebarLinksSection = ({\n  linksSection,\n}: SidebarLinksSectionProps) => {\n  return (\n    <ul className=\"flex max-h-screen flex-col\">\n      {linksSection.map((item) => (\n        <li key={item.id} className=\"relative\">\n          {item.href && (\n            <SidebarLinkSingle label={item.label} href={item.href} />\n          )}\n          {item.path && (\n            <SidebarLinkFolder\n              label={item.label}\n              path={item.path}\n              items={item.items}\n            />\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/layout/sidebar/inc/sidebar-links-section.tsx"
    },
    {
      "path": "block/adminsys/components/sidebar-nav-user.tsx",
      "content": "import Link from \"next/link\";\n\nimport { ChevronsUpDown, LogOut, User } from \"lucide-react\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nexport function SidebarNavUser() {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger className=\"w-full rounded-md outline-none ring-ring hover:bg-accent focus-visible:ring-2 data-[state=open]:bg-accent\">\n        <div className=\"flex items-center gap-2 px-2 py-1.5 text-left text-sm transition-all\">\n          <Avatar className=\"size-7 rounded-md border\">\n            <AvatarImage\n              src=\"/assets/images/avatar/avatar.jpg\"\n              alt=\"Avatar Image\"\n              className=\"animate-in fade-in-50 zoom-in-90\"\n            />\n            <AvatarFallback className=\"rounded-md\">\n              <User className=\"size-6\" />\n            </AvatarFallback>\n          </Avatar>\n          <div className=\"grid flex-1 leading-none\">\n            <div className=\"font-medium\">User 01</div>\n            <div className=\"overflow-hidden text-xs text-muted-foreground\">\n              <div className=\"line-clamp-1\">user01@email.com</div>\n            </div>\n          </div>\n          <ChevronsUpDown className=\"ml-auto mr-0.5 size-4 text-muted-foreground/50\" />\n        </div>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent\n        className=\"w-56\"\n        align=\"end\"\n        side=\"right\"\n        sideOffset={4}\n      >\n        <DropdownMenuLabel className=\"p-0 font-normal\">\n          <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm transition-all\">\n            <Avatar className=\"size-7 rounded-md\">\n              <AvatarImage\n                src=\"/assets/images/avatar/avatar.jpg\"\n                alt=\"Avatar Image\"\n              />\n              <AvatarFallback>\n                <User className=\"size-6\" />\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"grid flex-1\">\n              <div className=\"font-medium\">User 01</div>\n              <div className=\"overflow-hidden text-xs text-muted-foreground\">\n                <div className=\"line-clamp-1\">user01@email.com</div>\n              </div>\n            </div>\n          </div>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem asChild className=\"gap-2\">\n            <Link href=\"/account\">Account</Link>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem className=\"gap-2\">\n          <LogOut className=\"size-4 text-muted-foreground\" />\n          Log out\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/layout/sidebar/inc/sidebar-nav-user.tsx"
    },
    {
      "path": "block/adminsys/components/admin-sidebar.tsx",
      "content": "\"use client\";\n\nimport { siteConfig } from \"@/config/site\";\n\nimport { SidebarLinkSingle } from \"@/components/layout/sidebar/inc/sidebar-link-single\";\nimport { SidebarLinksSection } from \"@/components/layout/sidebar/inc/sidebar-links-section\";\nimport { SidebarNavUser } from \"@/components/layout/sidebar/inc/sidebar-nav-user\";\n\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarItem,\n  SidebarLabel,\n} from \"@/components/ui/sidebar\";\n\nexport function AdminSidebar() {\n  return (\n    <Sidebar>\n      <SidebarHeader className=\"min-h-14\">\n        <h1 className=\"text-3xl font-bold\">{siteConfig.adminSidebar.name}</h1>\n      </SidebarHeader>\n      <SidebarContent>\n        <ScrollArea>\n          {siteConfig.adminSidebar.content.map((item) => (\n            <SidebarItem key={item.id} className=\"mb-10\">\n              {item.contentTitle && (\n                <div className=\"px-1.5 text-sm font-medium text-muted-foreground/60\">\n                  {item.contentTitle}\n                </div>\n              )}\n              <SidebarLinksSection linksSection={item.linksSection} />\n            </SidebarItem>\n          ))}\n        </ScrollArea>\n        <SidebarItem className=\"mt-auto gap-0\">\n          <SidebarLabel className=\"mb-2 text-muted-foreground/60\">\n            Help\n          </SidebarLabel>\n          {siteConfig.adminSidebar.support.map((item) => (\n            <SidebarLinkSingle\n              key={item.href}\n              label={item.label}\n              href={item.href}\n              className=\"text-sm\"\n            />\n          ))}\n        </SidebarItem>\n      </SidebarContent>\n      <SidebarFooter>\n        <SidebarNavUser />\n      </SidebarFooter>\n    </Sidebar>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/layout/sidebar/admin-sidebar.tsx"
    }
  ]
}